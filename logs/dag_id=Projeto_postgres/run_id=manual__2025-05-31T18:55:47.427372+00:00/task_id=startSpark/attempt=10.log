{"timestamp":"2025-05-31T21:35:21.758428","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-31T21:35:21.758863","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/projeto1/projeto1.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-31T21:35:22.102269Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T21:35:23.167111Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T21:35:23.167439Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T21:35:23.167656Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T21:35:23.835466Z","level":"error","event":"25/05/31 21:35:23 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T21:35:28.901479Z","level":"info","event":"44","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.128724Z","level":"info","event":"+----------------------------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.128867Z","level":"info","event":"|regexp_replace(ID, ID_, , 1)|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.128927Z","level":"info","event":"+----------------------------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.128981Z","level":"info","event":"|                           0|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.129028Z","level":"info","event":"|                           1|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.129075Z","level":"info","event":"|                           2|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.129122Z","level":"info","event":"|                           3|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.129161Z","level":"info","event":"|                           4|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.129196Z","level":"info","event":"|                           5|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.129234Z","level":"info","event":"|                           7|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.129274Z","level":"info","event":"|                           8|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.129309Z","level":"info","event":"|                           9|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.129345Z","level":"info","event":"|                          11|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.129379Z","level":"info","event":"|                          12|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.129413Z","level":"info","event":"|                          13|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.129448Z","level":"info","event":"|                          16|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.129494Z","level":"info","event":"|                          17|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.129547Z","level":"info","event":"|                          18|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.129617Z","level":"info","event":"|                          19|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.129680Z","level":"info","event":"|                          21|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.129734Z","level":"info","event":"|                          22|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.129811Z","level":"info","event":"|                          23|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.129852Z","level":"info","event":"|                          24|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.129886Z","level":"info","event":"+----------------------------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.129920Z","level":"info","event":"only showing top 20 rows","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.165889Z","level":"info","event":"root","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.166039Z","level":"info","event":" |-- ID: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.166099Z","level":"info","event":" |-- Age: integer (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.166157Z","level":"info","event":" |-- Email: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.166208Z","level":"info","event":" |-- JoinDate: date (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.166263Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:35:29.166457","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
