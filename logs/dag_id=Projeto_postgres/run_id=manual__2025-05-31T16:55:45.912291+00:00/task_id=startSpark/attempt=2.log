{"timestamp":"2025-05-31T16:56:22.704198","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-31T16:56:22.704658","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/projeto1/projeto1.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-31T16:56:23.063287Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T16:56:24.252708Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T16:56:24.253113Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T16:56:24.253285Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T16:56:24.914018Z","level":"error","event":"25/05/31 16:56:24 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.838395Z","level":"info","event":"+----+------+-------+-----------------+----------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.838635Z","level":"info","event":"|  ID|  Name|    Age|            Email|  JoinDate|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.838730Z","level":"info","event":"+----+------+-------+-----------------+----------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.838781Z","level":"info","event":"|   0|  NULL|     52|   grace@mail.com|2023-05-11|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.838874Z","level":"info","event":"|ID_1|   Ian|unknown|     bob@mail.com|2022-06-18|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.838928Z","level":"info","event":"|   2|  Dana|     41|grace@example.com|2020-01-17|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.838974Z","level":"info","event":"|   3| Frank|     38| charlie@test.org|2022-07-24|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.839018Z","level":"info","event":"|   4|Hannah|     57|     eli@mail.com|2022-05-30|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.839060Z","level":"info","event":"+----+------+-------+-----------------+----------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.839104Z","level":"info","event":"only showing top 5 rows","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.840982Z","level":"info","event":"root","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.841160Z","level":"info","event":" |-- ID: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.841235Z","level":"info","event":" |-- Name: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.841296Z","level":"info","event":" |-- Age: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.841356Z","level":"info","event":" |-- Email: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.841419Z","level":"info","event":" |-- JoinDate: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.841484Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.859282Z","level":"info","event":"ID","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.859454Z","level":"info","event":"Name","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.859526Z","level":"info","event":"Age","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.859599Z","level":"info","event":"Email","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.859668Z","level":"info","event":"JoinDate","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T16:56:30.859999","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
