{"timestamp":"2025-05-31T17:24:57.085732","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-31T17:24:57.086177","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/projeto1/projeto1.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-31T17:24:57.455646Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T17:24:58.640143Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T17:24:58.640364Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T17:24:58.640418Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T17:24:59.303502Z","level":"error","event":"25/05/31 17:24:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T17:25:04.659321Z","level":"info","event":"+----+-------+-----------------+----------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T17:25:04.659509Z","level":"info","event":"|  ID|    Age|            Email|  JoinDate|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T17:25:04.659595Z","level":"info","event":"+----+-------+-----------------+----------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T17:25:04.659666Z","level":"info","event":"|   0|     52|   grace@mail.com|2023-05-11|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T17:25:04.659736Z","level":"info","event":"|ID_1|unknown|     bob@mail.com|2022-06-18|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T17:25:04.659803Z","level":"info","event":"|   2|     41|grace@example.com|2020-01-17|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T17:25:04.659903Z","level":"info","event":"|   3|     38| charlie@test.org|2022-07-24|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T17:25:04.659969Z","level":"info","event":"|   4|     57|     eli@mail.com|2022-05-30|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T17:25:04.660035Z","level":"info","event":"+----+-------+-----------------+----------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T17:25:04.660099Z","level":"info","event":"only showing top 5 rows","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T17:25:04.661867Z","level":"info","event":"root","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T17:25:04.662035Z","level":"info","event":" |-- ID: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T17:25:04.662115Z","level":"info","event":" |-- Age: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T17:25:04.662180Z","level":"info","event":" |-- Email: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T17:25:04.662254Z","level":"info","event":" |-- JoinDate: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T17:25:04.662314Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T17:25:05.235903Z","level":"info","event":"ID 0","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T17:25:05.451038Z","level":"info","event":"Age 7","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T17:25:05.685898Z","level":"info","event":"Email 0","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T17:25:05.923517Z","level":"info","event":"JoinDate 5","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T17:25:05.925366","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
