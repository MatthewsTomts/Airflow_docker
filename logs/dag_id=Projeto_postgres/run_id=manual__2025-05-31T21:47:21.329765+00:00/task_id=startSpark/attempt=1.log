{"timestamp":"2025-05-31T21:47:21.831370","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-31T21:47:21.831884","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/projeto1/projeto1.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-31T21:47:21.932362","level":"warning","event":"invalid escape sequence '\\d'","category":"SyntaxWarning","filename":"/opt/airflow/dags/projeto1/projeto1.py","lineno":28,"logger":"py.warnings"}
{"timestamp":"2025-05-31T21:47:22.215563Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T21:47:23.603207Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T21:47:23.603711Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T21:47:23.603869Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T21:47:24.289852Z","level":"error","event":"25/05/31 21:47:24 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T21:47:29.725875Z","level":"info","event":"44","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:47:29.784199Z","level":"info","event":"root","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:47:29.784372Z","level":"info","event":" |-- ID: integer (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:47:29.784460Z","level":"info","event":" |-- Age: integer (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:47:29.784539Z","level":"info","event":" |-- Email: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:47:29.784635Z","level":"info","event":" |-- JoinDate: date (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:47:29.784701Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T21:47:29.784611","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
