{"timestamp":"2025-05-31T22:33:47.770380","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-31T22:33:47.770814","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/projeto1/projeto1.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-31T22:33:48.091811Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T22:33:49.221459Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T22:33:49.221776Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T22:33:49.221850Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T22:33:49.856926Z","level":"error","event":"25/05/31 22:33:49 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.171343Z","level":"info","event":"+----+-------+-------------------+-------------------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.171505Z","level":"info","event":"|  ID|    Age|              Email|           JoinDate|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.171573Z","level":"info","event":"+----+-------+-------------------+-------------------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.171653Z","level":"info","event":"|   0|     52|     grace@mail.com|2023-05-11 00:00:00|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.171711Z","level":"info","event":"|ID_1|unknown|       bob@mail.com|2022-06-18 00:00:00|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.171767Z","level":"info","event":"|   2|     41|  grace@example.com|2020-01-17 00:00:00|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.171822Z","level":"info","event":"|   3|     38|   charlie@test.org|2022-07-24 00:00:00|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.171876Z","level":"info","event":"|   4|     57|       eli@mail.com|2022-05-30 00:00:00|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.171930Z","level":"info","event":"|ID_5|     20|     grace@mail.com|2022-12-12 00:00:00|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.171982Z","level":"info","event":"|   8|     68|     grace@test.org|2023-06-14 00:00:00|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.172035Z","level":"info","event":"|   9|     55|       eli@test.org|2020-08-25 00:00:00|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.172088Z","level":"info","event":"|  12|     27|    ian@example.com|2021-06-02 00:00:00|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.172140Z","level":"info","event":"|  13|     43|    bob@example.com|2022-01-11 00:00:00|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.172194Z","level":"info","event":"|  17|     26|     grace@mail.com|2023-01-18 00:00:00|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.172246Z","level":"info","event":"|  18|     38|  grace@example.com|2022-12-02 00:00:00|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.172298Z","level":"info","event":"|  19|     58|     frank@test.org|2022-05-18 00:00:00|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.172357Z","level":"info","event":"|  21|     70|  frank@example.com|2021-01-24 00:00:00|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.172415Z","level":"info","event":"|  22|     20|       ian@mail.com|2020-06-25 00:00:00|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.172465Z","level":"info","event":"|  23|unknown|user[at]example.com|2023-04-11 00:00:00|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.172532Z","level":"info","event":"|  24|     26|  frank@example.com|2023-10-26 00:00:00|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.172582Z","level":"info","event":"|  25|     37|user[at]example.com|2023-12-27 00:00:00|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.172647Z","level":"info","event":"|  26|     58|   user[at]mail.com|2021-05-25 00:00:00|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.172696Z","level":"info","event":"|  27|     36|    hannah@test.org|2020-06-23 00:00:00|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.172744Z","level":"info","event":"+----+-------+-------------------+-------------------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.172791Z","level":"info","event":"only showing top 20 rows","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T22:33:55.171827","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
