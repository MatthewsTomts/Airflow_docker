{"timestamp":"2025-05-31T18:53:15.957023","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-31T18:53:15.957524","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/projeto1/projeto1.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-31T18:53:16.310972Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T18:53:17.498021Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T18:53:17.498363Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T18:53:17.498507Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T18:53:18.166034Z","level":"error","event":"25/05/31 18:53:18 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.655546Z","level":"info","event":"+----+-------+-------------------+----------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.655806Z","level":"info","event":"|  ID|    Age|              Email|  JoinDate|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.655966Z","level":"info","event":"+----+-------+-------------------+----------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.656051Z","level":"info","event":"|   0|     52|     grace@mail.com|2023-05-11|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.656135Z","level":"info","event":"|ID_1|unknown|       bob@mail.com|2022-06-18|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.656200Z","level":"info","event":"|   2|     41|  grace@example.com|2020-01-17|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.656258Z","level":"info","event":"|   3|     38|   charlie@test.org|2022-07-24|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.656320Z","level":"info","event":"|   4|     57|       eli@mail.com|2022-05-30|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.656381Z","level":"info","event":"|ID_5|     20|     grace@mail.com|2022-12-12|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.656447Z","level":"info","event":"|   7|     45|       ian@test.org|not_a_date|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.656510Z","level":"info","event":"|   8|     68|     grace@test.org|2023-06-14|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.656575Z","level":"info","event":"|   9|     55|       eli@test.org|2020-08-25|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.656639Z","level":"info","event":"|  11|     19|   charlie@mail.com|not_a_date|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.656705Z","level":"info","event":"|  12|     27|    ian@example.com|2021-06-02|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.656771Z","level":"info","event":"|  13|     43|    bob@example.com|2022-01-11|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.656848Z","level":"info","event":"|  16|     27|       ian@test.org|2021/12/01|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.656912Z","level":"info","event":"|  17|     26|     grace@mail.com|2023-01-18|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.656974Z","level":"info","event":"|  18|     38|  grace@example.com|2022-12-02|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.657041Z","level":"info","event":"|  19|     58|     frank@test.org|2022-05-18|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.657104Z","level":"info","event":"|  21|     70|  frank@example.com|2021-01-24|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.657192Z","level":"info","event":"|  22|     20|       ian@mail.com|2020-06-25|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.657259Z","level":"info","event":"|  23|unknown|user[at]example.com|2023-04-11|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.657318Z","level":"info","event":"|  24|     26|  frank@example.com|2023-10-26|","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.657375Z","level":"info","event":"+----+-------+-------------------+----------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.657431Z","level":"info","event":"only showing top 20 rows","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.715995Z","level":"info","event":"root","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.716149Z","level":"info","event":" |-- ID: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.716217Z","level":"info","event":" |-- Age: integer (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.716276Z","level":"info","event":" |-- Email: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.716336Z","level":"info","event":" |-- JoinDate: date (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.716393Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-31T18:53:23.716374","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
